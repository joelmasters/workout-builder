{"version":3,"sources":["components/Card.js","layout/CardContainer.js","components/WorkoutCard.js","components/Chart.js","layout/WorkoutContainer.js","App.js","serviceWorker.js","index.js"],"names":["Card","clicked","_this","props","react_default","a","createElement","className","onClick","this","name","category","Component","CardContainer","passedProps","getCards","cards","i","exercises","length","_this$props$exercises","time","push","src_components_Card","key","WorkoutCard","defaultValue","value","Chart","_this$props$data","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","numCardio","numLegs","numCore","numBack","numChest","es","WorkoutContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createSummary","totalTime","setState","onDragEnd","result","console","log","toConsumableArray","state","from","source","index","to","destination","componentWillReceiveProps","nextProps","_this2","Fragment","components_Chart","react_beautiful_dnd_esm","droppableId","provided","assign","ref","innerRef","draggableProps","map","ex","draggableId","dragHandleProps","src_components_WorkoutCard","App","addedExercises","src_layout_CardContainer","warmups","breaks","chestExercises","legsExercises","backExercises","cardioExercises","coreExercises","src_layout_WorkoutContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b965bbf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Card.css';\nimport '../styles/shadows.css';\n\nclass Card extends Component {\n  clicked = () => {\n    this.props.clicked(this.props);  \n  }\n\n  render() {\n    return (\n      <div className=\"card shadow-2\" onClick={this.clicked}>\n        <span className=\"card__title\">{this.props.name}</span>\n        <br />\n        <div className=\"card__bottom\">\n          {this.props.category}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport './CardContainer.css';\n\nimport Card from '../components/Card';\n\nclass CardContainer extends Component {\n\n  clicked = (passedProps) => {\n    this.props.clicked(passedProps);\n  }\n\n  getCards = () => {\n    let cards = [];\n    for (let i = 0; i < this.props.exercises.length; i++) {\n      let {name, time, category} = this.props.exercises[i];\n      cards.push(\n        <Card\n            key={name}\n            name={name}\n            time={time}\n            category={category}\n            clicked={this.clicked} />\n      );\n    }\n    return cards;\n  }\n\n\n  render() {\n    let cards = this.getCards();\n    return (\n      <div className=\"card-container\">\n        {cards}\n      </div>\n    );\n  }\n}\n\nexport default CardContainer;","import React, { Component } from 'react';\nimport './Card.css';\nimport './WorkoutCard.css';\nimport '../styles/shadows.css';\n\nclass WorkoutCard extends Component {\n  clicked = () => {\n    this.props.clicked(this.props);  \n  }\n\n  render() {\n    return (\n      <div className=\"workout-card shadow-2\" >\n        <div className=\"workout-card__cat\" >\n          {this.props.category}\n        </div>\n        <div className=\"workout-card__block\">{this.props.name}</div>\n        <div className=\"workout-card__block\">Reps:&nbsp; \n          <select defaultValue=\"10\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n            <option value=\"12\">12</option>\n            <option value=\"15\">15</option>\n            <option value=\"20\">20</option>\n            <option value=\"25\">25</option>\n            <option value=\"30\">30</option>\n            <option value=\"40\">40</option>\n            <option value=\"50\">50</option>\n            <option value=\"60\">60</option>\n            <option value=\"70\">70</option>\n            <option value=\"80\">80</option>\n            <option value=\"90\">90</option>\n            <option value=\"100\">100</option>\n          </select>\n        </div>\n        <div className=\"workout-card__block\">Sets:&nbsp; \n          <select defaultValue=\"3\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n          </select>\n        </div>\n        <div className=\"workout-card__block\">Time: {this.props.time} minutes</div>\n      </div>\n    );\n  }\n}\n\nexport default WorkoutCard;\n","import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nclass Chart extends Component {\n\n  render() {\n\n    const { numCardio, numLegs, numCore, numBack, numChest } = this.props.data;\n\n    const data = {\n      labels: ['Cardio', 'Legs', 'Core', 'Back', 'Chest'],\n      datasets: [\n        {\n          label: 'Exercises',\n          backgroundColor: 'rgba(70,130,180,0.7)',\n          borderColor: 'rgb(70,130,180)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgb(70,130,180)',\n          hoverBorderColor: 'rgb(70,130,180)',\n          data: [numCardio, numLegs, numCore, numBack, numChest],\n        }\n      ]\n    };\n\n    return (\n      <div>\n        <Bar \n            data={data}\n             />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport './WorkoutContainer.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport WorkoutCard from '../components/WorkoutCard';\nimport Chart from '../components/Chart';\n\nclass WorkoutContainer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalTime: 0,\n      numCardio: 0,\n      numLegs: 0,\n      numChest: 0,\n      numBack: 0,\n      numCore: 0,\n      exercises: this.props.exercises,\n    }\n  }\n\n  clicked = (passedProps) => {\n    this.props.clicked(passedProps);\n  }\n\n  createSummary = () => {\n    let totalTime = 0;\n    let numCardio = 0;\n    let numBack = 0;\n    let numLegs = 0;\n    let numChest = 0;\n    let numCore = 0;\n\n    for (let i = 0; i < this.props.exercises.length; i++) {\n      totalTime += this.props.exercises[i].time;\n      switch(this.props.exercises[i].category) {\n        case 'Chest':\n          numChest++;\n          break;\n        case 'Legs':\n          numLegs++;\n          break;\n        case 'Arms':\n          numLegs++;\n          break;\n        case 'Back':\n          numBack++;\n          break;\n        case 'Cardio':\n          numCardio++;\n          break;\n        case 'Core':\n          numCore++;\n          break;\n        default:\n          break;\n      } \n    }\n    this.setState({\n      totalTime: totalTime,\n      numCardio: numCardio,\n      numBack: numBack,\n      numLegs: numLegs,\n      numChest: numChest,\n      numCore: numCore,\n    });\n  }\n\n  onDragEnd = (result) => {\n    console.log(\"result: \", result);\n    let exercises = [...this.state.exercises];\n    const from = result.source.index;\n    let to = '';\n\n    if (result.destination !== null) {\n      to = result.destination.index;\n      exercises[to] = exercises[from];\n      if (to < from) {\n        // moved up\n        for (let i = to+1; i <= from; i++) {\n          exercises[i] = this.state.exercises[i-1];\n        }\n      } else {\n        // moved down\n        for (let i = to-1; i >= from; i--) {\n          exercises[i] = this.state.exercises[i+1];\n        }\n      }     \n      this.setState({ exercises: exercises });\n    }\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    this.createSummary();\n    if (nextProps.exercises.length !== this.state.exercises.length) {\n      let exercises = [...this.state.exercises];\n      exercises.push(nextProps.exercises[nextProps.exercises.length-1]);\n      this.setState({ exercises: exercises });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"workout-summary-container\">\n          Total Time: {this.state.totalTime} minutes\n          <Chart data={this.state} />\n        </div>\n        <div className=\"workout-container\">\n          <DragDropContext onDragEnd={this.onDragEnd} >\n            <Droppable droppableId=\"list\">\n              {provided => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}>\n                  {this.state.exercises.map((ex, i) => (\n                    <Draggable draggableId={'draggable-' + i} index={i}>\n                        {provided => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}>\n                            <WorkoutCard\n                              key={ex.name}\n                              name={ex.name}\n                              time={ex.time}\n                              category={ex.category}\n                              clicked={this.clicked}\n                              />\n                          </div>\n                        )}\n                      </Draggable>\n                  ))}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default WorkoutContainer;","import React, { Component } from 'react';\nimport './App.css';\n\nimport CardContainer from './layout/CardContainer';\nimport WorkoutContainer from './layout/WorkoutContainer';\nimport './styles/shadows.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addedExercises: []\n    }\n  }\n\n  clicked = (passedProps) => {\n    let { addedExercises } = this.state;\n    addedExercises.push(passedProps);\n    this.setState({\n      addedExercises: addedExercises\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"navbar shadow-2\">\n          <h1>Workout Builder</h1>\n        </div>\n        <h2>Directions</h2>\n        <ol>\n          <li>Click to Add Exercises</li>\n          <li>Set Number of Reps</li>\n          <li>Set Number of Sets</li>\n        </ol>\n        <div className=\"main-flex\">\n          <div className=\"main-container shadow-2\">\n            <h2>Dynamic Warmups</h2>\n            <CardContainer \n                exercises={warmups}\n                clicked={this.clicked} />\n            <h2>Rest</h2>\n            <CardContainer \n                exercises={breaks}\n                clicked={this.clicked} />\n            <h2>Chest</h2>\n            <CardContainer \n                exercises={chestExercises}\n                clicked={this.clicked} />\n            <h2>Legs</h2>\n            <CardContainer \n                exercises={legsExercises}\n                clicked={this.clicked} />\n            <h2>Back</h2>\n            <CardContainer \n                exercises={backExercises}\n                clicked={this.clicked} />\n            <h2>Cardio</h2>\n            <CardContainer \n                exercises={cardioExercises}\n                clicked={this.clicked} />\n            <h2>Core</h2>\n            <CardContainer \n                exercises={coreExercises}\n                clicked={this.clicked} />\n          </div>\n          <div className=\"main-container shadow-2\">\n            <h2>Workout:</h2>\n            <WorkoutContainer\n                exercises={this.state.addedExercises} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\nconst chestExercises = [\n  {\n    name: 'Push Ups',\n    time: 2,\n    category: 'Chest',\n  },\n  {\n    name: 'Diamond Push Ups',\n    time: 2,\n    category: 'Chest',\n  },\n  {\n    name: 'Wide-Grip Push Ups',\n    time: 2,\n    category: 'Chest',\n  },\n  {\n    name: 'Dips',\n    time: 2,\n    category: 'Chest',\n  },\n];\n\nconst legsExercises = [\n  {\n    name: 'Squats',\n    time: 2,\n    category: 'Legs',\n  },\n  {\n    name: 'Jump Squats',\n    time: 2,\n    category: 'Legs',\n  },\n  {\n    name: 'Lunges',\n    time: 2,\n    category: 'Legs',\n  },\n  {\n    name: 'Jump Lunges',\n    time: 2,\n    category: 'Legs',\n  },\n];\n\nconst coreExercises = [\n  {\n    name: 'Plank',\n    time: 1,\n    category: 'Core',\n  },\n  {\n    name: 'Mountain Climbers',\n    time: 1,\n    category: 'Core',\n  },\n  {\n    name: 'Russian Twist',\n    time: 1,\n    category: 'Core',\n  },\n  {\n    name: 'Scissor Kicks',\n    time: 1,\n    category: 'Core',\n  },\n  {\n    name: 'Leg Lifts',\n    time: 1,\n    category: 'Core',\n  },\n  {\n    name: 'Sit Ups',\n    time: 1,\n    category: 'Core',\n  },\n  {\n    name: 'Crunches',\n    time: 1,\n    category: 'Core',\n  },\n  {\n    name: 'Suitcases',\n    time: 1,\n    category: 'Core',\n  },\n  {\n    name: 'Side Plank',\n    time: 1,\n    category: 'Core',\n  },\n];\n\nconst backExercises = [\n  {\n    name: 'Pull Ups',\n    time: 2,\n    category: 'Back',\n  },\n  {\n    name: 'Inverted Rows',\n    time: 2,\n    category: 'Back',\n  },\n  {\n    name: 'Chin Ups',\n    time: 2,\n    category: 'Back',\n  },\n];\n\nconst cardioExercises = [\n  {\n    name: 'Sprint',\n    time: 2,\n    category: 'Cardio',\n  },\n  {\n    name: 'Hill Climb',\n    time: 20,\n    category: 'Cardio',\n  },\n  {\n    name: 'Lap',\n    time: 8,\n    category: 'Cardio',\n  },\n  {\n    name: 'Mile',\n    time: 10,\n    category: 'Cardio',\n  },\n];\n\nconst warmups = [\n  {\n    name: 'High Knees',\n    time: 1,\n    category: 'Warmup',\n  },\n  {\n    name: 'Butt Kickers',\n    time: 1,\n    category: 'Warmup',\n  },\n  {\n    name: 'Russian March',\n    time: 1,\n    category: 'Warmup',\n  },\n  {\n    name: 'Super Marios',\n    time: 1,\n    category: 'Warmup',\n  },\n  {\n    name: 'Inchworm',\n    time: 1,\n    category: 'Warmup',\n  },\n  {\n    name: `World's Greatest Stretch`,\n    time: 1,\n    category: 'Warmup',\n  },\n  {\n    name: 'Lunge and Twist',\n    time: 1,\n    category: 'Warmup',\n  },\n  {\n    name: 'Karaoke Down and Back',\n    time: 1,\n    category: 'Warmup',\n  },\n];\n\nconst breaks = [\n  {\n    name: 'Break',\n    time: 1,\n    category: 'Break',\n  },\n  {\n    name: 'Rest',\n    time: 1,\n    category: 'Break',\n  },\n];","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}